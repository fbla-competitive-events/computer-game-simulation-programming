<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//music
audio_stop_sound(bgm_boss_01); //stops boss music
audio_play_sound(bgm_02, 1, true); //plays level 2 music

//wave and level
wave = 0; //sets wave to original value
with (obj_controller_hud)
{
    level += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(obj_parent_enemy) == 0) //checks if there are any enemies left
{
    switch (wave)
    {
        case 0:
        {
            wave = 1;
            instance_create(425, 300, obj_enemy_satellite);
            var tempX = 100;
                for (var i = 0; i &lt; 7; i++)
                    {
                        instance_create(tempX, 100, obj_enemy_basic_fire);
                        tempX += 100;
                    }
            break;
        }
        case 1:
        {
            wave = 2;
            var tempX = 100;
            var tempY = 100;
            //creates 3 side to side
                for (var i = 0; i &lt; 3; i++)
                {
                    instance_create(tempX, tempY, obj_enemy_basic_side);
                    tempY += 200;
                }
                    tempY = 200;
                for (var j = 0; j &lt; 2; j++)
                {
                    instance_create(700, tempY, obj_enemy_basic_side_reverse);
                    tempY += 200;
                }
            //creates spawner
                instance_create(300, 400, obj_enemy_satellite);      
                break;              
        }
        case 2:
        {
            wave = 3;
            var tempX = 100;
            var tempY = 100;
            //creates 3 side to side
                for (var i = 0; i &lt; 3; i++)
                {
                    instance_create(tempX, tempY, obj_enemy_basic_side);
                    tempY += 200;
                }
            var tempX = 100;
                for (var i = 0; i &lt; 7; i++)
                    {
                        instance_create(tempX, 100, obj_enemy_basic_fire);
                        tempX += 100;
                    }
        //creates spawner
                instance_create(400, 110, obj_enemy_satellite);      
                break;
        }
        case 3:
        {
            wave = 4;                
        //creates spawner
                instance_create(410, 150, obj_enemy_satellite);      
                instance_create(225, 300, obj_enemy_satellite);
                instance_create(500, 270, obj_enemy_satellite);
                instance_create(100, 120, obj_enemy_powerup);                                
                break;
        }
        case 4: 
        {
            wave = 5;
            with (obj_enemy_powerup)
            {
                instance_destroy(); //destroys power up enemy
            }
            var tempX = 100;
            //creates 14 enemies
            for (var i = 0; i &lt; 7; i++) 
            {
                instance_create(tempX, 150, obj_enemy_basic_fire);   
                instance_create(tempX, 350, obj_enemy_basic_fire);
                tempX += 100;
            }
            instance_create(500, 200, obj_enemy_satellite); //creates satellite
            break;    
        }
        case 5:
        {
            wave = 6;
            var tempX = 100;
            //creates 14 enemies
            for (var i = 0; i &lt; 7; i++) 
            {
                instance_create(tempX, 150, obj_enemy_basic);   
                instance_create(tempX, 350, obj_enemy_basic_fire);
                tempX += 100;
            }
            instance_create(225, 190, obj_enemy_satellite); //creates satellite
            var tempY = 50;
            for (var i = 0; i &lt; 3; i++)
                {
                    instance_create(100, tempY, obj_enemy_basic_side);
                    tempY += 200;
                }
            break;            
        }
        case 6:
        {
            for (var i = 0; i &lt; 8; i++) //creates 8 satellites
            {
                tempX = irandom_range(100, 600);
                tempY = irandom_range(100, 500);
                instance_create(tempX, tempY, obj_enemy_satellite); // creates satellites
            }
            //creates power up
            instance_create(400, 150, obj_enemy_powerup);
            wave = 7;
            break;
        }
        case 7:
        {
            wave = 8;
            with (obj_enemy_powerup)
            {
                instance_destroy();
            }
            instance_create(400, 100, obj_boss_2_cyborg); //creates enemy boss
            break;
        }
        case 8:
        {
            instance_change(obj_controller_L03, true); //changes into next controller
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sets up text
draw_set_color(c_white); //color of font
draw_set_font(font_game); //font

//draws wave
draw_text(70, 25, wave);

//draws title text
draw_text(300, 0, "Approaching Mars"); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
