<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//background
background_index[0] = bck_planet;

//music
audio_stop_sound(bgm_boss_02);
audio_play_sound(bgm_03, 1, true);

//wave and level
wave = 0;
with (obj_controller_hud)
{
    level += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(obj_parent_enemy) == 0) //checks for remaining enemies
{
    switch (wave)
    {
        case 0:
        {
            wave = 1;
            var tempX = 100;
            var tempY = 200;
                for (var i = 0; i &lt; 7; i++) //creates 7
                {
                    instance_create(tempX, tempY, obj_enemy_basic_fire_still);
                    instance_create(tempX, tempY + 100, obj_enemy_tank_still);
                    tempX += 100;
                }
            break;
        }
        case 1:
        {
            wave = 2;            
            //generates 4 side to side tanks
            var tempX = 200;
            var tempY = 100;            
            for (var i = 0; i &lt; 4; i++)
            {
                instance_create(tempX, tempY, obj_enemy_tank_side);
                tempY += 100;
            }            
            //generates 4 moving tanks
            var tempY = 150;
            var tempX = 100;
            for (var i = 0; i &lt; 4; i++)
            {
                instance_create(tempX, tempY, obj_enemy_tank_move);
                tempX += 200;
                tempY += 50;
            }
            //generates 4 side to side shooter
            var tempX = 150;
            var tempY = 150;
            for (var i = 0; i &lt; 4; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire_side);
                tempY += 100;
            }
            //generates 4 circle shooters
            var tempX = 75;
            var tempY = 300;
            for (var i = 0; i &lt; 4; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire_circle);
                tempX += 200;
            }
            break;
        }
        case 2:
        {
            wave = 3;
            //generates 7 moving tanks
            var tempX = 100;
            var tempY = 100;
            for (var i = 0; i &lt; 7; i++)
            {
                instance_create(tempX, tempY, obj_enemy_tank_move);
                tempX += 100;
                tempY += 50;   
            }    
            //generates 4 side to side tanks
            var tempX = 700;
            var tempY = 100;            
            for (var i = 0; i &lt; 4; i++)
            {
                instance_create(tempX, tempY, obj_enemy_tank_side);
                tempY += 100;
            }                               
            //generates satellite
            instance_create(150, 350, obj_enemy_satellite);     
            break;
        }        
        case 3:
        {
            wave = 4;
            //generates power up
            instance_create(550, 250, obj_enemy_powerup);
            //generates satellite
            instance_create(450, 200, obj_enemy_satellite);
            instance_create(200, 375, obj_enemy_satellite);
            //generates tanks
            instance_create(450, 250, obj_enemy_tank_still);
            instance_create(200, 425, obj_enemy_tank_still);
            //generates shooters in X formation
            var tempX = 100;
            var tempY = 100;
            for (var i = 0; i &lt; 7; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire);
                tempX += 100;
                tempY += 50;
            }
            var tempX = 750;
            var tempY = 100;
            for (var i = 0; i &lt; 7; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire);
                tempX -= 100;
                tempY += 50;
            }
            break;
        }
        case 4:
        {
            wave = 5;
            //destroys powerup
            with(obj_enemy_powerup)
            {
                instance_destroy();
            }
            //generates spawners
            instance_create(150, 200, obj_enemy_satellite);
            instance_create(625, 300, obj_enemy_satellite);
            instance_create(400, 225, obj_enemy_satellite);
            instance_create(375, 150, obj_enemy_satellite);
            //generates still tanks
            instance_create(150, 250, obj_enemy_tank_still);
            instance_create(625, 350, obj_enemy_tank_still);
            instance_create(400, 275, obj_enemy_tank_still);
            instance_create(375, 200, obj_enemy_tank_still);
            //generates 4 moving tanks
            var tempY = 150;
            var tempX = 100;
            for (var i = 0; i &lt; 4; i++)
            {
                instance_create(tempX, tempY, obj_enemy_tank_move);
                tempX += 200;
                tempY += 50;
            }                   
            //generates power up
            instance_create(250, 250, obj_enemy_powerup);     
            break;
        }
        case 5:
        {
            wave = 6;
            //destroys powerup
            with(obj_enemy_powerup)
            {
                instance_destroy();
            }
            //generates 14 still shooters
            var tempX = 50;
            var tempY = 100;
            for (var i = 0; i &lt; 7; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire_still); 
                tempX += 50;
                tempY += 25;
            }
            tempX += 50;
            tempY -= 25;
            for (var i = 0; i &lt; 7; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire_still);
                tempX += 50;
                tempY -= 25;
            }
            //generates 7 tanks
            var tempY = 300;
            var tempX = 100;
            for (var i = 0; i &lt; 7; i++)
            {
                instance_create(tempX, tempY, obj_enemy_tank_still);       
                tempX += 100;
            }
            //generates satellite
            instance_create(400, 200, obj_enemy_satellite);
            //generates circle shooters
            var tempX = 100;
            var tempY = 250;
            for (var i = 0; i &lt; 4; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire_circle);
                tempX += 200;   
            }
            break;            
        }
        case 6:
        {
            wave = 7;
            //generates moving tanks
            var tempX = 600;
            var tempY = 50;
            for (var i = 0; i &lt; 7; i++)
            {
                instance_create(tempX, tempY, obj_enemy_tank_move);
                tempX -= 75;
                tempY += 50;
            }
            //generates 4 moving tanks
            var tempY = 150;
            var tempX = 100;
            for (var i = 0; i &lt; 4; i++)
            {
                instance_create(tempX, tempY, obj_enemy_tank_move);
                tempX += 200;
                tempY += 50;
            } 
            //generates 1 satellite
            instance_create(325, 175, obj_enemy_satellite);           
            break;            
        }
        case 7:
        {
            wave = 8;
            //generates boss
            instance_create(400, 200, obj_boss_3_red_king);
            break;
        }
        case 8:
        {
            instance_change(obj_controller_L04, true);                        
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sets up text
draw_set_color(c_white); //color of font
draw_set_font(font_game); //font

//draws wave
draw_text(70, 25, wave);

//draws title text
draw_text(350, 0, "Mars"); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
