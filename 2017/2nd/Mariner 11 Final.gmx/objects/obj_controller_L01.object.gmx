<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sets up waves and levels
audio_play_sound(bgm_01, 50, true); //plays Level 1 theme on repeat
wave = 0; //sets wave to original value



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(obj_parent_enemy) == 0) //checks if there are any enemies left
{
    switch (wave) //spawns enemy waves
    {
        case 0:
            { 
                wave = 1; //sets wave to next wave
                var tempX = 100; 
                var tempY = 100;
                
                //creates 14 enemies
                for (var i = 0; i &lt; 7; i++) 
                {
                    instance_create(tempX, tempY, obj_enemy_basic);   
                    instance_create(tempX, tempY + 100, obj_enemy_basic);
                    tempX += 100;
                }                
                break; //ends case 0
            } 
        case 1:
            {
                wave = 2; //sets wave to next wave
                var tempX = 100;
                var tempY = 100;
                
                    instance_create(tempX - 50, tempY + 100, obj_enemy_basic);
                for (var i = 0; i &lt; 7; i++) 
                {
                    instance_create(tempX, tempY, obj_enemy_basic_fire);   
                    instance_create(tempX + 50, tempY + 100, obj_enemy_basic);
                    tempX += 100;
                }                                
                break; //ends case 1
            }
        case 2:
            {            
                wave = 3; //sets wave to next wave
                var tempX = 50;
                var tempY = 100;
                

                for (var i = 0; i &lt; 8; i++) 
                {
                    instance_create(tempX, tempY, obj_enemy_basic_fire);                       
                    tempX += 100;
                }
                tempX = 50;
                for (var i = 0; i &lt; 7; i++)
                {
                    instance_create(tempX + 50, tempY + 100, obj_enemy_basic_fire);
                    tempX += 100;
                }                   
                break;                         
            }              
        case 3:                    
            {
                wave = 4; //sets wave to next wave
                var tempX = 50;
                var tempY = 100;
                
                instance_create(50, 250, obj_enemy_powerup);
                for (var i = 0; i &lt; 8; i++) 
                {
                    instance_create(tempX, tempY, obj_enemy_basic_fire);                       
                    tempX += 100;
                }
                tempX = 50;
                for (var i = 0; i &lt; 7; i++)
                {
                    instance_create(tempX + 50, tempY + 100, obj_enemy_basic_fire);
                    tempX += 100;
                }                   
                break;                
            }
        case 4:
        {
            wave = 5;
            with (obj_enemy_powerup)
            {
                instance_destroy();
            }
            var tempX = 100; 
            var tempY = 100;
            
            //creates 14 enemies
            for (var i = 0; i &lt; 7; i++) 
            {
                instance_create(tempX, tempY, obj_enemy_basic);   
                instance_create(tempX, tempY + 100, obj_enemy_basic);
                tempX += 100;
            }  
            var tempX = 100;
            var tempY = 100;
            //creates 3 side to side
            for (var i = 0; i &lt; 3; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_side);
                tempY += 100;
            }                          
            break;
        }        
        case 5:
        {
            wave = 6;
            var tempX = 100;
            var tempY = 100;
            for (var i = 0; i &lt; 7; i++) 
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire);   
                tempX += 100;
            }
            var tempX = 100;
            for (var i = 0; i &lt; 3; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_side);
                tempY += 100;
            }                                                   
            break;
        }      
        case 6:
        {
            wave = 7;
            var tempX = 100; 
            var tempY = 100;
            
            //creates 14 enemies
            for (var i = 0; i &lt; 7; i++) 
            {
                instance_create(tempX, tempY, obj_enemy_basic_fire);   
                instance_create(tempX, tempY + 100, obj_enemy_basic_fire);
                tempX += 100;
            }
            var tempX = 100;
            //creates 5 side to side
            for (var i = 0; i &lt; 5; i++)
            {
                instance_create(tempX, tempY, obj_enemy_basic_side);
                tempY += 100;
            }                         
            break;
        }                  
        case 7:
        {
            wave = 8;
            var tempX = 400;
            var tempY = 50;
            instance_create(tempX, tempY, obj_boss_1_dragon); //creates boss of level 1
            audio_stop_sound(bgm_01);
            audio_play_sound(bgm_boss_01, 1, true);
            break;
        }
        case 8:
        {
            instance_change(obj_controller_L02, true); //changes controller into new controller
        }        
    }
}    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sets up text
draw_set_color(c_white); //color of font
draw_set_font(font_game); //font

//draws wave
draw_text(70, 25, wave);

//draws title text
draw_text(300, 0, "Edge of Space"); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
